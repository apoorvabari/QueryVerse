package com.example.courses.model;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import java.util.ArrayList;
import java.util.List;

@Entity
public class Course {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	private String name;

	// Ensure orphanRemoval = true for proper deletion of removed subjects
	@OneToMany(mappedBy = "course", cascade = CascadeType.ALL, orphanRemoval = true)
	private List<Subject> subjects = new ArrayList<>();

	// Getters and Setters

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<Subject> getSubjects() {
		return subjects;
	}

	// CRITICAL: Correctly handles bidirectional relationship for updates
	public void setSubjects(List<Subject> subjects) {
		this.subjects.clear(); // Clear existing subjects
		if (subjects != null) {
			for (Subject subject : subjects) {
				subject.setCourse(this); // Set the course for each subject
				this.subjects.add(subject); // Add subject to the course's list
			}
		}
	}
}