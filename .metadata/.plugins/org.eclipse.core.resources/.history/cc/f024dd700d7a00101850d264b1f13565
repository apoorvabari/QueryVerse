package com.example.courses.client;

import com.example.courses.model.Course;
import com.example.courses.model.Subject;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PutMapping;

import java.util.List;

// The 'name' attribute should match the service ID if using a discovery service (like Eureka)
// or a logical name that maps to a URL in application.properties/yml
// The 'url' attribute is used here for direct communication, useful for testing or without discovery.
@FeignClient(name = "course-service", url = "http://localhost:8080") // Points to the local course-service
public interface CourseFeignClient {

    @GetMapping("/api/courses")
    List<Course> getAllCourses();

    @GetMapping("/api/courses/{id}")
    Course getCourseById(@PathVariable("id") Long id); // Use @PathVariable with name if parameter name differs

    @GetMapping("/api/courses/{courseId}/subjects")
    List<Subject> getSubjectsByCourseId(@PathVariable("courseId") Long courseId);

    @GetMapping("/api/courses/{courseId}/subjects/{subjectId}")
    Subject getSubjectByCourseAndSubjectId(
            @PathVariable("courseId") Long courseId,
            @PathVariable("subjectId") Long subjectId);

    @PostMapping("/api/courses")
    Course createCourse(@RequestBody Course course);

    @PostMapping("/api/courses/{courseId}/subjects")
    Subject addSubjectToCourse(
            @PathVariable("courseId") Long courseId,
            @RequestBody Subject subjectDetails);

    @PutMapping("/api/courses/{id}")
    Course updateCourse(@PathVariable("id") Long id, @RequestBody Course courseDetails);

    @PutMapping("/api/courses/{courseId}/subjects/{subjectId}")
    Subject updateSubjectInCourse(
            @PathVariable("courseId") Long courseId,
            @PathVariable("subjectId") Long subjectId,
            @RequestBody Subject subjectDetails);

    @DeleteMapping("/api/courses/{id}")
    void deleteCourse(@PathVariable("id") Long id); // Return type void for 204 No Content

    @DeleteMapping("/api/courses/{courseId}/subjects/{subjectId}")
    void deleteSubjectInCourse(
            @PathVariable("courseId") Long courseId,
            @PathVariable("subjectId") Long subjectId);
}
