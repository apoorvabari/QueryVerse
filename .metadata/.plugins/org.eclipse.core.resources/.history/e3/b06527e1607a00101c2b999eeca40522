package com.example.courses.test;

import com.example.courses.client.CourseFeignClient;
import com.example.courses.model.Course;
import com.example.courses.model.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/api/feign-test")
public class FeignClientTestController {

    @Autowired
    private CourseFeignClient courseFeignClient;

    @GetMapping("/courses")
    public ResponseEntity<List<Course>> getAllCoursesViaFeign() {
        List<Course> courses = courseFeignClient.getAllCourses();
        return ResponseEntity.ok(courses);
    }

    @GetMapping("/courses/{id}")
    public ResponseEntity<Course> getCourseByIdViaFeign(@PathVariable Long id) {
        Course course = courseFeignClient.getCourseById(id);
        if (course != null) {
            return ResponseEntity.ok(course);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @GetMapping("/courses/{courseId}/subjects")
    public ResponseEntity<List<Subject>> getSubjectsByCourseIdViaFeign(@PathVariable Long courseId) {
        List<Subject> subjects = courseFeignClient.getSubjectsByCourseId(courseId);
        if (subjects != null && !subjects.isEmpty()) {
            return ResponseEntity.ok(subjects);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @GetMapping("/courses/{courseId}/subjects/{subjectId}")
    public ResponseEntity<Subject> getSubjectByCourseAndSubjectIdViaFeign(
            @PathVariable Long courseId,
            @PathVariable Long subjectId) {
        Subject subject = courseFeignClient.getSubjectByCourseAndSubjectId(courseId, subjectId);
        if (subject != null) {
            return ResponseEntity.ok(subject);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    // You can add more methods here to test POST, PUT, DELETE via Feign if needed
}
